generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("MIGRATION_URL")
  schemas  = ["everday"]
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String?
  access_token             String?
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String?
  session_state            String?
  refresh_token_expires_in Int?
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("account")
  @@schema("everday")
}

model User {
  id               String         @id @default(cuid())
  name             String?
  email            String?        @unique
  emailVerified    DateTime?
  image            String?
  role             UserRole
  createdById      String?
  createdBy        User?          @relation("InvitedMembers", fields: [createdById], references: [id])
  createdAt        DateTime       @default(now())
  updatedAt        DateTime?      @updatedAt
  accounts         Account[]
  PrimaryOwnership Organisation[]
  primaryManager   Team[]
  Organisations    Organisation[] @relation("OrganisationOwners")
  ownership        Team[]         @relation("TeamManagers")
  membership       Team[]         @relation("TeamMembers")
  invited          User[]         @relation("InvitedMembers")

  @@map("user")
  @@schema("everday")
}

model Organisation {
  id                                                                    String             @id @default(cuid())
  name                                                                  String?
  primaryOwnerId                                                        String
  primaryOwner                                                          User               @relation(fields: [primaryOwnerId], references: [id])
  teams                                                                 Team[]
  owners                                                                User[]             @relation("OrganisationOwners")

  @@map("organisation")
  @@schema("everday")
}

model Team {
  id                                                  String       @id @default(cuid())
  organisationId                                      String
  name                                                String?
  primaryManagerId                                    String
  Organisation                                        Organisation @relation(fields: [organisationId], references: [id])
  primaryManager                                      User         @relation(fields: [primaryManagerId], references: [id])
  managers                                            User[]       @relation("TeamManagers")
  members                                             User[]       @relation("TeamMembers")

  @@map("team")
  @@schema("everday")
}

model Permissions {
  user_id         String
  entity_type     String
  entity_id       String
  permission      String
}

enum UserRole {
  member
  manager
  owner
  platform

  @@schema("everday")
}
